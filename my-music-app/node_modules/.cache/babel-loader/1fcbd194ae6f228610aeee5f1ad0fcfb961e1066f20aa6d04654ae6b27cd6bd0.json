{"ast":null,"code":"var _jsxFileName = \"/Users/kekich/IdeaProjects/melofy/my-music-app/src/SpotifyClone.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SpotifyClone() {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n  const [iconUrl, setIconUrl] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/tracks\").then(res => res.json()).then(data => {\n      setTracks(data);\n      // если icon_url общий для всех треков, можно взять из первого:\n      if (data.length > 0) {\n        setIconUrl(data[0].icon_url);\n      }\n    }).catch(err => console.error(err));\n  }, []);\n\n  // Фильтрация по поиску по названию трека и артисту\n  const filteredTracks = tracks.filter(track => track.track_name.toLowerCase().includes(search.toLowerCase()) || track.artist.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0418\\u0441\\u043A\\u0430\\u0442\\u044C...\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        \"aria-label\": \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0422\\u0440\\u0435\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), iconUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconUrl,\n        alt: \"\\u041E\\u0431\\u043B\\u043E\\u0436\\u043A\\u0430 \\u0442\\u0440\\u0435\\u043A\\u0430\",\n        style: {\n          width: 100,\n          height: 100,\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredTracks.length ? filteredTracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: track.track_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this), \" \\u2013 \", track.artist]\n        }, track.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(SpotifyClone, \"tVKsbQXDoDC2ncBv+0Hi4ezfn2U=\");\n_c = SpotifyClone;\nvar _c;\n$RefreshReg$(_c, \"SpotifyClone\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SpotifyClone","_s","search","setSearch","tracks","setTracks","iconUrl","setIconUrl","fetch","then","res","json","data","length","icon_url","catch","err","console","error","filteredTracks","filter","track","track_name","toLowerCase","includes","artist","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","objectFit","map","id","_c","$RefreshReg$"],"sources":["/Users/kekich/IdeaProjects/melofy/my-music-app/src/SpotifyClone.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function SpotifyClone() {\n    const [search, setSearch] = useState(\"\");\n    const [tracks, setTracks] = useState([]);\n    const [iconUrl, setIconUrl] = useState(\"\");\n\n    useEffect(() => {\n        fetch(\"http://localhost:8080/api/tracks\")\n            .then((res) => res.json())\n            .then((data) => {\n                setTracks(data);\n                // если icon_url общий для всех треков, можно взять из первого:\n                if (data.length > 0) {\n                    setIconUrl(data[0].icon_url);\n                }\n            })\n            .catch((err) => console.error(err));\n    }, []);\n\n    // Фильтрация по поиску по названию трека и артисту\n    const filteredTracks = tracks.filter(\n        (track) =>\n            track.track_name.toLowerCase().includes(search.toLowerCase()) ||\n            track.artist.toLowerCase().includes(search.toLowerCase())\n    );\n\n    return (\n        <div className=\"app\">\n            <header className=\"header\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Искать...\"\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                    aria-label=\"Поиск\"\n                />\n            </header>\n\n            <main>\n                <h1>Треки</h1>\n                {iconUrl && (\n                    <img\n                        src={iconUrl}\n                        alt=\"Обложка трека\"\n                        style={{ width: 100, height: 100, objectFit: \"cover\" }}\n                    />\n                )}\n                <ul>\n                    {filteredTracks.length ? (\n                        filteredTracks.map((track) => (\n                            <li key={track.id}>\n                                <strong>{track.track_name}</strong> – {track.artist}\n                            </li>\n                        ))\n                    ) : (\n                        <p>Ничего не найдено</p>\n                    )}\n                </ul>\n            </main>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}